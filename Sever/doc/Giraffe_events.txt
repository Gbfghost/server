//===== Giraffe模擬器 - 文檔 ====================
//= 事件標簽 (Npc Event) 說明文檔
//===== 文檔描述 =============================================
//= 此文檔對Giraffe添加的自定義事件標簽進行了說明, 包括這些
//= 事件的觸發時機、關聯玩家、可能的返回參數等.
//============================================================

事件名稱約定:
	On[事件關聯到的對象][事件名稱][事件類型]

事件關聯到的對象:
	是指到時候事件被觸發時腳本會關聯到哪個對象上執行:
	- PC		表示玩家(最常見)

事件名稱:
	只事件的名字, 通常只是起到區分作用

事件類型:
	- Event		常規事件, 阻塞將進入事件隊列, 不可打斷
	- Filter	過濾事件, 立即執行, 可被打斷
	- Express	實時事件, 立即執行, 不可打斷

//============================================================
// 改進 rAthena 官方事件
//============================================================

*OnPCStatCalcEvent:

當角色能力被重新計算時觸發事件, 例如: 變更角色的六維素質點, 穿戴或脫下裝備,
改變角色當前所在地圖, 登入遊戲, 基礎或職業等級變化等等.

常規用法:
	可以在這個事件的觸發代碼中, 編寫一些裝備常用的腳本.
	例如: 當基礎等級被 10 整除的時候, 六維屬性全部增加當前等級 / 10 的整數
	
	if (BaseLevel % 10 == 0) {
		bonus bAllStats, BaseLevel / 10;
	}

實時事件:
	此事件在Giraffe<模擬器>中被改造成了"實時事件",
	實時事件的執行不會被放入事件隊列, 只要被觸發都能被立刻執行.

	部分特殊的腳本指令, 不能在實時事件的處理腳本中運行:
	mes, next, close, close2, menu, select, prompt, input,
	openstorage, guildopenstorage, produce, cooking, birthpet,
	callshop, sleep, sleep2, openmail, openauction, progressbar,
	buyingstore, makerune, opendressroom, openstorage2
	
	若您知道可能潛在的副作用且堅持需要使用上述任何一個指令,
	可以使用 'unlockcmd' 腳本指令來解鎖限制.

--------------------------------------------------------------

*OnSellItem:

當某個 NPC 使用 callshop 指令打開商店, 且玩家在商店里面出售自己的道具時, 
此 NPC 的 OnSellItem 標簽(存在時)將會被觸發.

攜帶參數:
	除了 rAthena 自帶的參數外, Pandas 拓展了以下數組:
	@sold_idx[]		用於保存被出售的物品在玩家身上的背包序號

注意事項:
	- 此事件為 rAthena 官方事件, 具體用法請參考 doc/script_commands.txt



//============================================================
// 常規事件 (AKA: 普通事件)
//============================================================
// 執行常規事件的時候若當前玩家正在與 NPC 對話,
// 那麽本次事件將會壓入事件隊列暫緩執行,
// 直到玩家與 NPC 的對話完結之後才會挨個順序觸發.
//
// 整個 rAthena 官方自帶的事件都屬於這一類. 事件隊列容量有限,
// 若隊列滿了那麽後來的事件將被拋棄.
//============================================================

*OnPCIdentifyEvent:

當玩家成功鑒定了裝備時觸發事件

事件關聯:
	關聯到發起鑒定的玩家

中斷關聯:
	若玩家鑒定裝備時在 OnPCIdentifyFilter 事件中使用了 processhalt
	指令打斷了後續流程, 那麽此事件將不會被觸發.

攜帶參數:
	@identify_idx	已被玩家成功鑒定的道具背包序號

--------------------------------------------------------------

*OnPCInsertCardEvent:

當玩家成功插入卡片後觸發事件

事件關聯:
	關聯到剛剛完成插卡的玩家

攜帶參數:
	@insert_equip_idx	剛剛成功插卡的裝備背包序號
	@insert_card_idx	剛剛被插卡消耗掉的卡片背包序號 (注意: 此時的卡片已被刪除)
	@insert_card_id		剛剛被插入的卡片物品編號
	@insert_card_slot	剛剛被插入卡片的卡槽編號 ( 0 - 第一個卡槽; 3 - 第四個卡槽 )

注意事項:
	此事件只有成功完成插卡後才會被觸發, 插卡失敗是不會觸發的
	不過插卡失敗的情況一般幾乎不可能發生, 可以安心使用
	
	@insert_card_idx 參數指向的背包序號在極端情況下將不可信

--------------------------------------------------------------

*OnPCUseItemEvent:

當玩家成功使用非裝備類道具後觸發事件

事件關聯:
	關聯到成功使用了道具的玩家

攜帶參數:
	@useitem_idx	剛剛被使用的道具背包序號 (注意: 此時的道具可能已被消耗)
	@useitem_nameid	剛剛被使用的道具編號

注意事項:
	@useitem_idx 參數指向的背包序號在極端情況下將不可信
	本事件與 rAthenaCN 老版本的同名事件含義不同, 請腳本編寫人員留意

--------------------------------------------------------------

*OnPCUseSkillEvent:

當玩家成功使用技能後觸發事件 (技能需成功詠唱完畢)

事件關聯:
	關聯到成功使用了技能的玩家

攜帶參數:
	@useskill_id			剛剛施放的技能編號
	@useskill_lv			剛剛施放的技能等級
	@useskill_target_gid	被施法目標的 GameID, 若為 0 則表示這是個地面技能
	@useskill_pos_x			剛剛被施法的地面 X 坐標
	@useskill_pos_y			剛剛被施法的地面 Y 坐標

注意事項:
	模擬器內部的技能實現流程比較長, 手動測試無法覆蓋全部分支.
	若您發現自己關心的某個技能使用後該事件沒被觸發的話,
	可以前往 https://github.com/PandasWS/Pandas 提交 Issue 進行反饋.

修訂記錄:
	v1.1.2	- 技能需要詠唱完畢才會觸發此事件

--------------------------------------------------------------

*OnPCKillMvpEvent:

當玩家殺死 MVP 魔物後觸發事件

事件關聯:
	關聯到給予 MVP 魔物最後一擊的玩家

攜帶參數:
	killedrid			被殺魔物的類型編號 (魔物編號)
	killedgid			被殺魔物的遊戲單位編號 (GameID)
	
	@mob_dead_x			魔物死亡時所處的 X 坐標
	@mob_dead_y			魔物死亡時所處的 Y 坐標
	@mob_lasthit_rid	給予魔物最後一擊的角色的遊戲單位編號 (GameID)
	@mob_lasthit_cid	給予魔物最後一擊的角色編號
	@mob_mvp_rid		本次 MVP 角色的遊戲單位編號 (GameID)
	@mob_mvp_cid		本次 MVP 角色的角色編號

修訂記錄:
	v1.1.1	- 增加 killedgid 攜帶參數

--------------------------------------------------------------

*OnPCEquipEvent:

當玩家成功穿戴一件裝備時觸發事件
當玩家執行"裝備切換"將"待用裝備"轉正為"生效裝備"成功後也會觸發事件

事件關聯:
	關聯到穿戴裝備的玩家

攜帶參數:
	@equip_idx		玩家穿戴的裝備背包序號
	@equip_swapping	本次穿戴是否由於"裝備切換"而觸發的

裝備切換:
	新的仙境傳說客戶端支持"裝備切換"機制,
	此時如果單獨將裝備拖動到裝備面板的"待切換裝備"窗口中進行登記,
	不會觸發此事件 (因為此時裝備並未實際穿戴).

--------------------------------------------------------------

*OnPCUnequipEvent:

當玩家成功脫下一件裝備時觸發事件
用一個新裝備去替換位置相同且已穿戴的"生效裝備", 導致它被成功脫下時也會觸發過濾器

事件關聯:
	關聯到脫下裝備的玩家

攜帶參數:
	@unequip_idx		玩家成功脫下的裝備背包序號
	@unequip_swapping	本次脫下是否由於"裝備切換"而觸發的
	@unequip_force		本次脫下是否由某個需要強制脫下的內部邏輯產生的

裝備切換:
	新的仙境傳說客戶端支持"裝備切換"機制,
	此時如果單獨將裝備從到裝備面板的"待用裝備"窗口中拖離移除,
	不會觸發此過濾器 (因為此時裝備並未實際脫下).

強制脫下說明:
	- 角色轉職的時候, 若穿戴的裝備已經不符合新職業的要求, 那麽裝備將被強制脫下.
	- 當精煉道具時, 已經裝備就會被強制脫下, 以便進行精煉.
	- @dropall @storeall @changesex @changecharsex @fullstrip 等指令也會觸發裝備的強制脫下.

注意事項:
	當 @unequip_swapping 為 1 時, "生效裝備"實際上只是和"待用裝備"
	進行了交換, 並未直接脫下到背包中.

	替換位置相同的"生效裝備"時, 參數 @unequip_swapping 的值為 0.

千萬注意:
	當程序內部邏輯需要強制脫下某件裝備時, @unequip_force 將為 1,
	當它為 1 的時候請不要使用 processhalt 打斷後續流程, 或刪除即將被操作的裝備.
	因為這可能引發各種奇怪的問題.
	
	比如: 當替換裝備的時候相同位置的老裝備應該被強制脫下, 
	如果此時打斷後續流程, 那麽新穿戴的裝備雖然可以成功穿戴,
	但是老的裝備的"脫下腳本"就不會被觸發.



//============================================================
// Giraffe<模擬器> - 過濾事件 (過濾器事件)
//============================================================
// 過濾事件通常在服務器一些關鍵的節點觸發,
// 可以用 processhalt 腳本指令打斷, 打斷後將影響後續工作流.
// 
// 從 v1.1.1 版本開始:
// ---------------------------------------
// 過濾事件一旦觸發會被立刻執行! 哪怕玩家正在和 NPC 對話,
// 也不會被壓入事件隊列暫緩執行.
// 
// 過濾事件默認禁止使用[需要等待玩家進行後續動作]的指令:
// mes, next, close, close2, menu, select, prompt, input,
// openstorage, guildopenstorage, produce, cooking, birthpet,
// callshop, sleep, sleep2, openmail, openauction, progressbar,
// buyingstore, makerune, opendressroom, openstorage2
//
// 若您知道可能潛在的副作用且堅持需要使用上述任何一個指令,
// 可以使用 'unlockcmd' 腳本指令來解鎖限制.
// 
// 任何過濾事件觸發時都將自動攜帶 @interrupt_npcid 參數,
// 作者可以通過 @interrupt_npcid 參數來獲取當前過濾事件觸發時
// 玩家正在與哪個 NPC 對話 (遊戲單位編號).
// 值為 0 表示沒有打斷玩家, 那你可以隨意使用 mes 等指令.
//============================================================

*OnPCIdentifyFilter:

當玩家在裝備鑒定列表中選擇好裝備, 並點擊"確定"按鈕時觸發過濾器

事件關聯:
	關聯到發起鑒定的玩家

中斷說明: 
	中斷後會無視玩家本次鑒定道具的請求, 系統不再鑒定此裝備

攜帶參數:
	@identify_idx	被玩家選擇進行鑒定的道具背包序號

--------------------------------------------------------------

*OnPCInChatroomFilter:

當玩家雙擊進入 NPC 開啟的聊天室時將觸發過濾器

事件關聯:
	關聯到進入聊天室的玩家

中斷關聯:
	中斷後客戶端將不會打開聊天室窗口
	
注意事項:
	只會觸發建立聊天室的 NPC 名下的過濾器事件,
	其他 NPC 使用的 OnPCInChatroomFilter 過濾器不會被觸發
	
	此外需要注意的是 rAthena 自帶的 waitingroom 指令有一個 "<event label>" 事件,
	當聊天室中的成員數量足夠時就會被觸發. 若您在本過濾器中使用 processhalt
	指令打斷了後續流程, 那麽 waitingroom 的事件將不會被觸發.

--------------------------------------------------------------

*OnPCInsertCardFilter:

當玩家準備插入卡片時觸發過濾器

事件關聯:
	關聯到準備插卡的玩家

中斷關聯:
	中斷後服務端會無視玩家本次插入卡片的操作

攜帶參數:
	@insert_equip_idx	即將被插卡的裝備背包序號
	@insert_card_idx	即將被插入的卡片背包序號
	@insert_card_id		即將被插入的卡片物品編號
	@insert_card_slot	即將被插入卡片的卡槽編號 ( 0 - 第一個卡槽; 3 - 第四個卡槽 )

--------------------------------------------------------------

*OnPCUseItemFilter:

當玩家準備使用非裝備類道具時觸發過濾器

事件關聯:
	關聯到準備使用道具的玩家

中斷關聯:
	中斷後服務端會無視玩家本次使用道具的操作

攜帶參數:
	@useitem_idx	即將被使用的道具背包序號
	@useitem_nameid	即將被使用的道具編號

--------------------------------------------------------------

*OnPCUseSkillFilter:

當玩家準備使用技能時觸發過濾器

事件關聯:
	關聯到準備使用技能的玩家

中斷說明:
	中斷後服務端會無視玩家本次使用技能的請求

攜帶參數:
	@useskill_id			即將施放的技能編號
	@useskill_lv			即將施放的技能等級
	@useskill_target_gid	被施法目標的 GameID, 若為 0 則表示這是個地面技能
	@useskill_pos_x			即將被施法的地面 X 坐標
	@useskill_pos_y			即將被施法的地面 Y 坐標

注意事項:
	為了方便利用事件實現一些技能, 本過濾器的觸發時機非常早,
	就算玩家被 setpcblock 設置為禁用技能, 此過濾器也能夠被觸發.
	
	此過濾器觸發時, 技能詠唱及施法條件判斷、材料扣除等尚未發生.

--------------------------------------------------------------

*OnPCOpenRouletteFilter:

當玩家準備打開樂透大轉盤的時候觸發過濾器

事件關聯:
	關聯到準備打開樂透大轉盤的玩家

中斷說明:
	中斷後服務端會無視本次打開樂透大轉盤的請求

注意事項:
	該過濾器的觸發必須依賴一些條件, 若條件不匹配則不會被觸發:
	- 客戶端必須是 2014-10-22 或更新的版本
	- 若當前正在與 NPC 進行對話, 那麽此過濾器將不會被觸發
	
	為了進一步優化體驗, Pandas 對大樂透按鈕的點擊邏輯進行了調整:
	正在和 NPC 對話時將禁止點擊大樂透按鈕按鈕 (與 rAthena 有所不同)

--------------------------------------------------------------

*OnPCViewEquipFilter:

當玩家準備查看某個角色的裝備時觸發過濾器

事件關聯:
	關聯到發起查看請求的玩家

中斷說明:
	中斷後服務端會無視本次查看他人裝備的請求

攜帶參數:
	@view_equip_target_name$	被查看角色的角色名
	@view_equip_target_cid		被查看角色的角色編號
	@view_equip_target_aid		被查看角色的賬號編號
	@view_equip_target_allowed	被查看角色是否允許其他人看他的裝備
	@view_equip_bypass_limit	是否繞過所有限制直接允許查看 (可賦值參數, 設為 1 則表示繞過)
								若你在事件中將此變量改成 1 的話, 那麽除非被 processhalt 打斷,
								否則不管對方是否允許你看裝備, 你都可以直接看

注意事項:
	- 使用 viewequip 腳本指令也會觸發此過濾器
	- 從 1.1.13 版本開始, 哪怕是對方不允許你查看裝備, 此過濾器也能夠被觸發

--------------------------------------------------------------

*OnPCEquipFilter:

當玩家準備穿戴裝備時觸發過濾器
當玩家執行"裝備切換"將"待用裝備"轉正為"生效裝備"時也會觸發過濾器

事件關聯:
	關聯到即將穿戴裝備的玩家

中斷說明:
	中斷後服務端會無視玩家本次穿戴操作
	若 @equip_swapping 為 1 時, 使用 processhalt 是無效的

攜帶參數:
	@equip_idx		玩家即將穿戴的裝備背包序號
	@equip_swapping	本次穿戴是否由於"裝備切換"而觸發的

裝備切換:
	新的仙境傳說客戶端支持"裝備切換"機制,
	此時如果單獨將裝備拖動到裝備面板的"待用裝備"窗口中進行登記,
	不會觸發此過濾器 (因為此時裝備並未實際穿戴).

注意事項:
	若玩家身上已穿戴一件相同位置的裝備,
	那麽過濾器被觸發時用 processhalt 打斷了穿戴本裝備的後續過程,
	角色身上的原穿戴的裝備也不會被脫下.

	當玩家穿戴一件未被綁定的裝備, 並在客戶端中確認執行綁定後,
	在過濾器中用 processhalt 打斷後續過程, 裝備也將維持最初的未綁定狀態.

	執行該過濾器時, 裝備實際上還未穿戴上, 因此在該事件的觸發腳本中使用
	getinventoryinfo(@equip_idx, 2) 嘗試獲取該裝備的穿戴位置時獲取的值永為 0

--------------------------------------------------------------

*OnPCUnequipFilter:

當玩家準備脫下裝備時觸發過濾器
用一個新裝備去替換位置相同且已穿戴的"生效裝備"時也會觸發過濾器

事件關聯:
	關聯到即將脫下裝備的玩家

中斷關聯:
	中斷後服務端會無視玩家本次脫下操作
	若 @unequip_swapping 為 1 時, 使用 processhalt 是無效的

攜帶參數:
	@unequip_idx		玩家即將脫下的裝備背包序號
	@unequip_swapping	本次脫下是否由於"裝備切換"而觸發的
	@unequip_force		本次脫下是否由某個需要強制脫下的內部邏輯產生的

裝備切換:
	新的仙境傳說客戶端支持"裝備切換"機制,
	此時如果單獨將裝備從到裝備面板的"待用裝備"窗口中拖離移除,
	不會觸發此過濾器 (因為此時裝備並未實際脫下).

強制脫下說明:
	- 角色轉職的時候, 若穿戴的裝備已經不符合新職業的要求, 那麽裝備將被強制脫下.
	- 當精煉道具時, 已經裝備就會被強制脫下, 以便進行精煉.
	- @dropall @storeall @changesex @changecharsex @fullstrip 等指令也會觸發裝備的強制脫下.

注意事項:
	當 @unequip_swapping 為 1 時, "生效裝備"實際上只是和"待用裝備"
	進行了交換, 並未直接脫下到背包中.

	替換位置相同的"生效裝備"時, 參數 @unequip_swapping 的值為 0.

	執行該過濾器時, 裝備實際上還未脫下, 因此在該事件的觸發腳本中使用
	getinventoryinfo(@equip_idx, 2) 嘗試獲取該裝備的穿戴位置時獲取的值通常不是 0

千萬注意:
	當程序內部邏輯需要強制脫下某件裝備時, @unequip_force 將為 1,
	當它為 1 的時候請不要使用 processhalt 打斷後續流程, 或刪除即將被操作的裝備.
	因為這可能引發各種奇怪的問題.
	
	比如: 當替換裝備的時候相同位置的老裝備應該被強制脫下, 
	如果此時打斷後續流程, 那麽新穿戴的裝備雖然可以成功穿戴,
	但是老的裝備的"脫下腳本"就不會被觸發.

--------------------------------------------------------------

*OnPCChangeTitleFilter:

事件描述: 
	當玩家即將變更稱號時將觸發過濾器
	
事件關聯:
	關聯到稱號變更的玩家

中斷說明:
	中斷後服務端會無視玩家本次修改稱號的操作,
	也不會根據 @target_title_id 變量的值來設定玩家的稱號
	
	鑒於 @target_title_id 是可被修改的
	所以你可以用直接修改 @target_title_id 的方式來篡改最終的稱號ID
	但是要注意, 采用這種方法的話, 後面別跟 processhalt;

攜帶參數:
	@trigger_mode
		0 - 通過裝備面板觸發
		1 - 通過 setchartitle 腳本指令觸發
		2 - 通過 @title 管理員指令觸發

	@target_title_id	即將變更成的目標稱號ID (該值可被修改)
	@pre_title_id	之前的稱號ID是多少

注意事項:
	當 @trigger_mode 為 0 時, 若 @target_title_id 參數的值也為 0,
	則表示玩家雙擊了 "Title Release" (或翻譯成"Disable Title")

兼容提醒:
	此過濾器的一些細節與 rAthenaCN v1.8.0 版本存在差異, 可能會有不兼容情況
	請酌情修改之前的老腳本, 以便使腳本可以正常工作.

	- 取消了事件別名: OnPCChangeTitleEvent
	- @new_title_id 改名為 @target_title_id (@new_title_id 將不再被賦值)

--------------------------------------------------------------

*OnPCBuffStartFilter:

事件描述: 
	當玩家即將獲得一個狀態(Buff)時觸發過濾器
	
事件關聯:
	關聯到即將獲得狀態的玩家

中斷說明:
	中斷後服務端會無視玩家本次獲得狀態的請求

攜帶參數:
	@about2start_sc_id		該狀態的編號
	@about2start_sc_rate	該狀態的觸發概率(10000 = 100%, 該值可被修改)
	@about2start_sc_tick	該狀態的持續時長(單位為毫秒, 該值可被修改)
							時長根據內部實現方式的不同, 有可能是指多長時間後剩余秒數減一
	@about2start_sc_val1	該狀態的第1個參數的值 (該值可被修改)
	@about2start_sc_val2	該狀態的第2個參數的值 (該值可被修改)
	@about2start_sc_val3	該狀態的第3個參數的值 (該值可被修改)
	@about2start_sc_val4	該狀態的第4個參數的值 (該值可被修改)

注意事項:
	若 @about2start_sc_rate 或 @about2start_sc_tick 被改寫成 0 則視為執行中斷
	若 @about2start_sc_tick 設為 -1 則表示無限時長

--------------------------------------------------------------

*OnPCUseOCIdentifyFilter:

當玩家使用一鍵鑒定道具時觸發過濾器.

事件關聯:
	關聯到執行一鍵鑒定的玩家

中斷說明:
	中斷後服務端會無視玩家本次進行一鍵鑒定的請求

攜帶參數:
	@identify_idx	被玩家選擇進行鑒定的道具背包序號

注意事項:
	此過濾器在觸發的時候並未確保 @identify_idx 背包序號所指向的道具 100% 存在並且有效,
	也並未檢查背包中是否存在放大鏡道具 (客戶端會檢測一次).
	因此請在必要的時候請自己進行額外判斷.

--------------------------------------------------------------

*OnPCUseReviveTokenFilter

當玩家使用菜單中的原地覆活之證時觸發過濾器.

事件關聯:
	關聯到執行原地覆活的玩家

中斷說明:
	中斷後服務端會無視玩家本次覆活操作

--------------------------------------------------------------

*OnPCGuildCreateFilter:

當玩家準備創建公會時觸發過濾器 [聽風]

事件關聯:
	關聯到準備創建公會的玩家

中斷關聯:
	中斷後服務端會無視玩家本次創建公會的操作

攜帶參數:
	@create_guild_name$	要創建的公會名稱

--------------------------------------------------------------

*OnPCGuildJoinFilter:

當玩家即將加入公會時觸發過濾器 [聽風]

事件關聯:
	關聯加入公會的玩家

中斷關聯:
	中斷後服務端會無視玩家本次加入公會的操作

攜帶參數:
	@join_guild_id		公會ID
	@join_guild_aid		邀請者的AID

--------------------------------------------------------------

*OnPCGuildLeaveFilter:

當玩家準備離開公會時觸發過濾器 [聽風]

事件關聯:
	自願離開公會的關聯到離開公會的玩家
	會長踢出公會的關聯到會長

中斷說明:
	中斷後玩家離開公會失敗

攜帶參數:
	@left_guild_id		公會ID
	@left_guild_name$	公會名稱
	@left_guild_kick	是否是被會長踢出 (0 - 玩家自己退出公會; 1 - 被會長從公會驅逐)
	@left_guild_aid		離開公會玩家的賬號編號

--------------------------------------------------------------

*OnPCPartyCreateFilter:

當玩家準備創建隊伍時觸發過濾器 [聽風]

事件關聯:
	關聯到準備創建隊伍的玩家

中斷關聯:
	中斷後服務端會無視玩家本次創建隊伍的操作

攜帶參數:
	@create_party_name$	要創建的隊伍名稱

--------------------------------------------------------------

*OnPCPartyJoinFilter:

當玩家即將加入隊伍時觸發過濾器 [聽風]

事件關聯:
	關聯到即將加入隊伍的玩家

中斷關聯:
	中斷後服務端會無視玩家本次加入隊伍的操作

攜帶參數:
	@join_party_id		隊伍編號
	@join_party_aid		隊長的賬號編號

注意事項:
	僅在被邀請的玩家同意加入隊伍時過濾器才會觸發


--------------------------------------------------------------

*OnPCPartyLeaveFilter:

當玩家準備離開隊伍時觸發過濾器 [聽風]

事件關聯:
	若是玩家自願離開隊伍的, 則關聯到離開隊伍的玩家
	若是被隊長踢出隊伍的, 則關聯到隊長

中斷說明:
	中斷後服務端會無視玩家本次離開隊伍的請求

攜帶參數:
	@left_party_id		隊伍編號
	@left_party_name$	隊伍名稱
	@left_party_kick	是否是被隊長踢出 (0 - 自願退出隊伍; 1 - 被隊長驅逐)
	@left_party_aid		即將離開隊伍的角色所對應的賬號編號

--------------------------------------------------------------

*OnPCDropItemFilter:

當玩家準備丟棄或掉落道具時觸發過濾器 [人魚姬的思念]

事件關聯:
	關聯到即將丟棄或掉落道具的玩家

中斷說明:
	中斷後服務端會無視本次掉落請求

攜帶參數:
	@drop_idx			丟棄或掉落道具的背包序號
	@drop_itemid		丟棄或掉落道具的物品編號
	@drop_amount		丟棄或掉落道具的數量

注意事項:
	玩家在 PVP 夢魘模式被擊殺導致掉落裝備時, 也會觸發此過濾器.
	
	哪怕不中斷此過濾器, 後續也會有其他判斷條件可能會導致最終無法掉落此道具,
	例如: 玩家所在地圖存在 nodrop 地圖標記.

--------------------------------------------------------------

*OnPCClickTombFilter:

當玩家點擊魔物墓碑時觸發過濾器 [人魚姬的思念]

事件關聯:
	關聯到點擊墓碑的玩家

中斷說明:
	中斷後服務端會無視系統默認的墓碑對話框

攜帶參數:
	@tomb_mapid				墓碑所在的地圖編號
	@tomb_mapname$			墓碑所在的地圖名稱
	@tomb_x					墓碑所在的 X 坐標
	@tomb_y					墓碑所在的 Y 坐標

	@tomb_gid				墓碑 NPC 的遊戲單位編號
	@tomb_createtime		墓碑的創建時間 (Unix 時間戳)

	@tomb_mob_gid			死亡 MVP 魔物的遊戲單位編號
	@tomb_mob_classid		死亡 MVP 魔物的魔物編號
	@tomb_mob_respawnsecs	死亡 MVP 魔物將在幾秒鐘之後刷新覆活
	@tomb_mob_respawntime	死亡 MVP 魔物的覆活時間 (Unix 時間戳, 讀取不到則為 -1)

	@tomb_killer_name$		擊殺 MVP 魔物的玩家名稱
	@tomb_killer_gid		擊殺 MVP 魔物的玩家遊戲單位編號

--------------------------------------------------------------

*OnPCStorageAddFilter:

當玩家準備將道具存入倉庫時觸發過濾器 [香草]

事件關聯:
	關聯到準備將道具存入倉庫的玩家

中斷說明:
	中斷後服務端會無視本次存入道具的請求

攜帶參數:
	@storeitem_src_from		即將存入的道具來源 (1: 背包; 2: 手推車)
	@storeitem_src_idx		即將存入的道具序號
							若在從背包來則是背包序號, 若從手推車來則是手推車中的物品序號
	@storeitem_src_nameid	即將存入的道具編號
	@storeitem_src_amount	即將存入的道具數量
	
	@storeitem_dst_type		計劃將其存放到的目標倉庫類型 (1: 個人倉庫; 2: 公會倉庫)
	@storeitem_dst_storeid	計劃將其存放到的目標倉庫編號
							對於公會倉庫而言, 此選項的值無意義 (固定為 0).
							當我們在 conf/inter_server.yml 中定義多個玩家個人倉庫,
							並使用 openstorage2 指令打開它們進行物品存放的時候,
							可以通過倉庫編號區分玩家將道具放到了哪個倉庫.

注意事項:
	此事件觸發時無法確保玩家最終的道具一定就能夠被成功保存到倉庫,
	因此在撰寫腳本的時候不能以此為假設.

--------------------------------------------------------------

*OnPCStorageDelFilter:

當玩家準備將道具取出倉庫時觸發過濾器 [香草]

事件關聯:
	關聯到準備將道具取出倉庫的玩家

中斷說明:
	中斷後服務端會無視本次取出道具的請求

攜帶參數:
	@removeitem_src_from		即將取出的道具來源倉庫類型 (1: 個人倉庫; 2: 公會倉庫)
	@removeitem_src_storeid		即將取出的道具來源倉庫編號
								對於公會倉庫而言, 此選項的值無意義 (固定為 0).
								當我們在 conf/inter_server.yml 中定義多個玩家個人倉庫,
								並使用 openstorage2 指令打開它們進行物品取出的時候,
								可以通過倉庫編號區分玩家從哪個倉庫取出了道具.
	@removeitem_src_idx			即將取出的道具索引序號
	@removeitem_src_nameid		即將取出的道具編號
	@removeitem_src_amount		即將取出的道具數量

	@removeitem_dst_type		計劃將其存放到的目的地 (1: 背包; 2: 手推車)

注意事項:
	此事件觸發時無法確保玩家最終的道具一定就能夠成功從倉庫中取出,
	因此在撰寫腳本的時候不能以此為假設.

--------------------------------------------------------------

*OnPCCartAddFilter:

當玩家準備將道具從背包存入手推車時觸發過濾器 [香草]

事件關聯:
	關聯到準備將道具從背包存入手推車的玩家

中斷說明:
	中斷後服務端會無視本次存入道具的請求

攜帶參數:
	@storeitem_nameid	即將存入的道具編號
	@storeitem_amount	即將存入的道具數量
	@storeitem_idx		即將存入的道具序號 (背包序號)

注意事項:
	此事件觸發時無法確保玩家最終的道具一定就能夠成功從背包存入手推車,
	因此在撰寫腳本的時候不能以此為假設.

--------------------------------------------------------------

*OnPCCartDelFilter:

當玩家準備將道具從手推車取回背包時觸發過濾器 [香草]

事件關聯:
	關聯到準備將道具從手推車取回背包的玩家

中斷說明:
	中斷後服務端會無視本次取回道具的請求

攜帶參數:
	@removeitem_nameid	即將取出的道具編號
	@removeitem_amount	即將取出的道具數量
	@removeitem_idx		即將取出的道具序號 (手推車序號)

注意事項:
	此事件觸發時無法確保玩家最終的道具一定就能夠成功從手推車中取出,
	因此在撰寫腳本的時候不能以此為假設.

--------------------------------------------------------------

*OnPCFavoriteAddFilter:

當玩家準備將道具移入收藏欄位時觸發過濾器 [香草]

事件關聯:
	關聯到準備將道具移入收藏欄位的玩家

中斷說明:
	中斷後服務端會無視本次移動道具的請求

攜帶參數:
	@favorite_nameid	即將移入的道具編號
	@favorite_amount	即將移入的道具數量
	@favorite_idx		即將移入的道具序號 (背包序號)

--------------------------------------------------------------

*OnPCFavoriteDelFilter:

當玩家準備將道具從收藏欄位移出時觸發過濾器 [香草]

事件關聯:
	關聯到準備將道具移出收藏欄位的玩家

中斷說明:
	中斷後服務端會無視本次移動道具的請求

攜帶參數:
	@unfavorite_nameid	即將移出的道具編號
	@unfavorite_amount	即將移出的道具數量
	@unfavorite_idx		即將移出的道具序號 (背包序號)


//============================================================
// Giraffe<模擬器> - 實時事件
//============================================================
// 實時事件一旦觸發會被立刻執行! 哪怕玩家正在和 NPC 對話,
// 也不會被壓入事件隊列暫緩執行.
// 
// 實時事件默認禁止使用[需要等待玩家進行後續動作]的指令:
// mes, next, close, close2, menu, select, prompt, input,
// openstorage, guildopenstorage, produce, cooking, birthpet,
// callshop, sleep, sleep2, openmail, openauction, progressbar,
// buyingstore, makerune, opendressroom, openstorage2
//
// 若您知道可能潛在的副作用且堅持需要使用上述任何一個指令,
// 可以使用 'unlockcmd' 腳本指令來解鎖限制.
// 
// 任何實時事件觸發時都將自動攜帶 @interrupt_npcid 參數,
// 作者可以通過 @interrupt_npcid 參數來獲取當前實時事件觸發時
// 玩家正在與哪個 NPC 對話 (遊戲單位編號).
// 值為 0 表示沒有打斷玩家, 那你可以隨意使用 mes 等指令.
//============================================================

*OnPCProgressAbortExpress:

當玩家的進度條被打斷後觸發實時事件

事件關聯:
	關聯到進度條被打斷的玩家

攜帶參數:
	@abort_npc_id		被中斷的進度條是哪個 NPC 編號提供的
	@abort_timeout		若進度條不被中斷時走到 100% 的具體時間戳

注意事項:
	- 該事件默認不會觸發, 您需要使用 settrigger 腳本指令設置一下
	- 關於 settrigger 腳本指令的用法請查閱 doc/pandas_script_commands.txt

修訂記錄:
	v1.1.1	- 從 OnPCProgressAbortEvent 改成 OnPCProgressAbortExpress
			- 增加 @abort_npc_id 和 @abort_timeout 攜帶參數

--------------------------------------------------------------

*OnPCBuffStartExpress:

事件描述:
	當玩家成功獲得一個狀態(Buff)後觸發實時事件

事件關聯:
	關聯到獲得狀態的玩家

攜帶參數:
	@started_sc_id		該狀態的編號
	@started_sc_rate	該狀態的觸發概率(10000 = 100%)
	@started_sc_tick	該狀態的持續時長(單位為毫秒)
						時長根據內部實現方式的不同, 有可能是指多長時間後剩余秒數減一
	@started_sc_val1	該狀態的第1個參數的值
	@started_sc_val2	該狀態的第2個參數的值
	@started_sc_val3	該狀態的第3個參數的值
	@started_sc_val4	該狀態的第4個參數的值

注意事項:
	若 @started_sc_tick 為 -1 則表示該狀態無限時長

--------------------------------------------------------------

*OnPCBuffEndExpress:

事件描述:
	當玩家成功解除一個狀態(Buff)後觸發實時事件

事件關聯:
	關聯到解除狀態的玩家

攜帶參數:
	@ended_sc_id		該狀態的編號

--------------------------------------------------------------

*OnPCEnterMapExpress:

事件描述:
	當玩家進入或者改變地圖時觸發實時事件

事件關聯:
	關聯到進入或者改變地圖的玩家

攜帶參數:
	@frommap_id		來源地圖編號, 為 0 則表示玩家剛登錄
	@frommap_name$	來源地圖的名稱
	@frommap_x		來源地圖的起飛 x 坐標
	@frommap_y		來源地圖的起飛 y 坐標
	
	@tomap_id		目標地圖編號
	@tomap_name$    目標地圖的名稱
	@tomap_x		目標地圖的落地 x 坐標
	@tomap_y		目標地圖的落地 y 坐標

注意事項:
	當 @frommap_id 為 0 時, @frommap_name$ 為空字符串

--------------------------------------------------------------

*OnUnitKillExpress:

事件描述:
	當某個單位被擊殺時觸發實時事件
	當前支持觸發的單位類型有: 玩家\魔物\生命體\傭兵\元素精靈
	
	寵物和 NPC 不會被擊殺死亡, 因此不會觸發此事件.
	
	生命體被安息, 元素精靈超時自動銷毀或被精靈控制技能解散,
	傭兵被解雇或逃跑都不是死亡, 因此不會觸發此事件.

事件關聯:
	不關聯到任何玩家

攜帶參數:
	$@killed_gid		死亡單位的遊戲單位編號
	$@killed_type		死亡單位的類型
	$@killed_classid	死亡單位的種類編號 (魔物編號\生命體編號等等)
	$@killed_mapid		死亡單位所在的地圖編號
	$@killed_mapname$	死亡單位所在的地圖名稱
	$@killed_x			死亡單位所在的 X 坐標
	$@killed_y			死亡單位所在的 Y 坐標
	
	$@killer_gid		最後一擊殺手單位的遊戲單位編號 (若為 0 則表示被系統擊殺)
	$@killer_type		最後一擊殺手單位的類型 (若為 0 則表示被系統擊殺)
	$@killer_classid	最後一擊殺手單位的種類編號 (魔物編號\生命體編號等等)
	$@killer_mapid		最後一擊殺手單位所在的地圖編號
	$@killer_mapname$	最後一擊殺手單位所在的地圖名稱
	$@killer_x			最後一擊殺手單位所在的 X 坐標
	$@killer_y			最後一擊殺手單位所在的 Y 坐標
	$@killer_skillid	最後一擊使用的技能編號 (若為 0 則表示普通攻擊)

系統擊殺:
	是指通過 @killmonster 等指令將全地圖魔物擊殺時,
	魔物不是被另外一個單位通過攻擊殺死, 這種死亡方式稱之為被系統擊殺.

提示信息:
	若單位是被某個玩家擊殺的話, 您可以手動關聯到殺手單位.

注意事項:
	由於此事件不關聯到任何玩家,
	因此攜帶參數的變量都變成了 $@ 開頭的地圖服務器臨時變量,
	而不是用 @ 開頭的角色臨時變量, 使用時要注意區分

--------------------------------------------------------------

*OnMobDropItemExpress:

當魔物即將掉落 db/item_properties.yml 中將 ExecuteMobDropExpress 標記
設置為 true 的道具時觸發實時事件.

事件關聯:
	不關聯到任何玩家

攜帶參數:
	$@mobdrop_gid			即將掉落道具的魔物的遊戲單位編號
	$@mobdrop_mobid			即將掉落道具的魔物編號
	$@mobdrop_itemid		即將掉落道具的編號
	$@mobdrop_rate			即將掉落道具在應用諸多修正後的最終掉率
	$@mobdrop_mapname$		掉落道具魔物所在的地圖名稱
	
	$@mobdrop_from			道具的詳細掉落來源, 用於幫助腳本進行更詳細的判斷
	
							0 - 未知的掉落來源 (通常情況下不應該存在此情況)
							1 - 配置在 mob_db 中會掉落的普通道具
							2 - 魔物死亡掉落的礦石, 礦石掉率在 finding_ore_rate 戰鬥配置選項中指定
							3 - 使用 bonus 指定玩家擊敗魔物會掉落的道具 (如: bAddMonsterDropItem)
							4 - 之前魔物拾取的道具, 這類道具 100% 掉落 (比如波利吃掉的道具)
							5 - 配置在 mob_db 中會掉落的 MVP 獎勵道具 (直接掉落到玩家背包)
							
	$@mobdrop_killerrid		給魔物最後一擊的玩家遊戲單位編號 (為 0 表示被系統擊殺)
	$@mobdrop_belongrid		道具歸屬玩家的遊戲單位編號 (為 0 表示無歸屬)
	$@mobdrop_bypass		是否跳過掉落此道具 (為 0 表示正常掉落, 為 1 表示不掉落)

系統擊殺:
	是指通過 @killmonster 等指令將全地圖魔物擊殺時,
	魔物不是被另外一個單位通過攻擊殺死, 這種死亡方式稱之為被系統擊殺.
	
提示信息:
	若想根據最後一擊玩家的某些變量來判斷是否掉落道具,
	可以在確認 $@mobdrop_killerrid 非 0 的情況下使用 attachrid 指令
	與 $@mobdrop_killerrid 的玩家進行手動關聯.
	
注意事項:
	由於此事件不關聯到任何玩家,
	因此攜帶參數的變量都變成了 $@ 開頭的地圖服務器臨時變量,
	而不是用 @ 開頭的角色臨時變量, 使用時要注意區分

--------------------------------------------------------------

*OnPCAttackExpress:

當玩家發起攻擊並即將進行結算時觸發實時事件 [聽風]

事件關聯:
	關聯到觸發攻擊行為的玩家
	如果是寵物/生命體/傭兵/元素則直接關聯到其主人

攜帶參數:
	@attack_src_type			攻擊者的類型
	@attack_src_gid				攻擊者的遊戲單位編號 (若是玩家則返回賬號編號)

	@attack_target_type			被攻擊者的類型
	@attack_target_gid			被攻擊者的遊戲單位編號 (若是玩家則返回賬號編號)
	@attack_target_mobid		被攻擊者的魔物編號 (若是不是魔物則返回 0)

	@attack_damage_flag			本次攻擊的傷害類型 (位運算)
		按攻擊範圍:
			BF_SHORT:			近距離攻擊
			BF_LONG:			遠距離攻擊
		按攻擊類型:
			BF_WEAPON:			武器攻擊
			BF_MAGIC:			魔法攻擊
			BF_MISC:			混合攻擊
		按技能類型:
			BF_NORMAL:			普通攻擊
			BF_SKILL:			技能攻擊
		
		例子:
		----------------
		if ((@attack_damage_flag & BF_MAGIC) == BF_MAGIC) {
			dispbottom "我發起了一次魔法攻擊";
		}
		
		if ((@attack_damage_flag & (BF_MAGIC|BF_LONG)) == (BF_MAGIC|BF_LONG)) {
			dispbottom "我發起了一次遠距離魔法攻擊";
		}
		
	@attack_damage_skillid		本次攻擊使用的技能編號 (若為 0 則表示普通攻擊)
	@attack_damage_skilllv		本次攻擊使用的技能等級
	@attack_damage_right		本次攻擊右手武器造成的傷害值 (該值可被修改)
	@attack_damage_left			本次攻擊左手武器造成的傷害值 (該值可被修改)

注意事項:
	只有即將發生傷害時才會觸發此事件, 若為 MISS 則不觸發此事件.
	
	假如攻擊者和被攻擊者都是玩家, 並且在服務器中除了使用 OnPCHarmedExpress 之外
	還使用到了 OnPCAttackExpress 事件, 兩個事件都對傷害進行調整的情況下,
	原始傷害會先經過被攻擊者的 OnPCHarmedExpress 事件處理,
	再將 OnPCHarmedExpress 修改後的傷害, 發給攻擊者的 OnPCAttackExpress 事件處理.

性能警告:
	全服建議最多只有一個 NPC 負責處理此事件.
	全服在線玩家的任意一次實際造成傷害的攻擊都將觸發此事件,
	因此請不要在事件中進行耗時操作.

--------------------------------------------------------------

*OnPCHarmedExpress:

當玩家受到傷害並即將進行結算時觸發實時事件 [人魚姬的思念]

事件關聯:
	關聯到受到傷害的玩家
	如果是寵物/生命體/傭兵/元素則直接關聯到其主人

攜帶參數:
	@harmed_target_type			被攻擊者的類型
	@harmed_target_gid			被攻擊者的遊戲單位編號 (若是玩家則返回賬號編號)
	
	@harmed_src_type			攻擊者的類型
	@harmed_src_gid				攻擊者的遊戲單位編號 (若是玩家則返回賬號編號)
	@harmed_src_mobid			攻擊者的魔物編號 (若是不是魔物則返回 0)

	@harmed_damage_flag			本次攻擊的傷害類型 (位運算)
		按攻擊範圍:
			BF_SHORT:			近距離攻擊
			BF_LONG:			遠距離攻擊
		按攻擊類型:
			BF_WEAPON:			武器攻擊
			BF_MAGIC:			魔法攻擊
			BF_MISC:			混合攻擊
		按技能類型:
			BF_NORMAL:			普通攻擊
			BF_SKILL:			技能攻擊
		
		例子:
		----------------
		if ((@harmed_damage_flag & BF_MAGIC) == BF_MAGIC) {
			dispbottom "我受到了一次魔法攻擊";
		}
		
		if ((@harmed_damage_flag & (BF_MAGIC|BF_LONG)) == (BF_MAGIC|BF_LONG)) {
			dispbottom "我受到了一次遠距離魔法攻擊";
		}
		
	@harmed_damage_skillid		本次攻擊使用的技能編號 (若為 0 則表示普通攻擊)
	@harmed_damage_skilllv		本次攻擊使用的技能等級
	@harmed_damage_right		本次攻擊右手武器造成的傷害值 (該值可被修改)
	@harmed_damage_left			本次攻擊左手武器造成的傷害值 (該值可被修改)

注意事項:
	只有即將發生傷害時才會觸發此事件, 若為 MISS 則不觸發此事件.
	
	假如攻擊者和被攻擊者都是玩家, 並且在服務器中除了使用 OnPCHarmedExpress 之外
	還使用到了 OnPCAttackExpress 事件, 兩個事件都對傷害進行調整的情況下,
	原始傷害會先經過被攻擊者的 OnPCHarmedExpress 事件處理,
	再將 OnPCHarmedExpress 修改後的傷害, 發給攻擊者的 OnPCAttackExpress 事件處理.

性能警告:
	全服建議最多只有一個 NPC 負責處理此事件.
	全服在線玩家的任意一次實際造成傷害的攻擊都將觸發此事件,
	因此請不要在事件中進行耗時操作.

--------------------------------------------------------------

*OnPCMerCallExpress:

當玩家成功召喚出傭兵時觸發實時事件 [HongShin]

事件關聯:
	關聯到召喚傭兵的玩家

攜帶參數:
	@mer_gid					傭兵的遊戲單位編號
	@mer_classid				傭兵的種類編號
	@mer_lifetime				傭兵的持續存在時間 (單位為毫秒)

	@mer_mapid					傭兵所在的地圖編號
	@mer_mapname$				傭兵所在的地圖名稱
	@mer_x						傭兵所在的 X 坐標
	@mer_y						傭兵所在的 Y 坐標

注意事項:
	若傭兵由於各種原因沒有被召喚成功, 則不會觸發此事件.

--------------------------------------------------------------

*OnPCMerLeaveExpress:

當傭兵離開玩家時觸發實時事件 [HongShin]

事件關聯:
	關聯到傭兵的主人玩家

攜帶參數:
	@mer_gid					傭兵的遊戲單位編號
	@mer_classid				傭兵的種類編號
	@mer_leave_reason			傭兵的離開方式或原因

								0 - 因持續時間到期而離開
								1 - 因傭兵死亡而離開
								2 - 因玩家將傭兵解雇而離開
								3 - 因傭兵逃跑而離開 (玩家死亡導致)

	@mer_mapid					傭兵所在的地圖編號
	@mer_mapname$				傭兵所在的地圖名稱
	@mer_x						傭兵所在的 X 坐標
	@mer_y						傭兵所在的 Y 坐標

--------------------------------------------------------------

*OnPCTalkExpress:

當玩家往聊天框發送信息時觸發實時事件 [人魚姬的思念]

事件關聯:
	發送消息的玩家

攜帶參數:
	@talk_gid				聊天玩家的遊戲單位編號
	@talk_mapid				聊天玩家所在的地圖編號
	@talk_mapname$			聊天玩家所在的地圖名稱
	@talk_x					聊天玩家所在的 X 坐標
	@talk_y					聊天玩家所在的 y 坐標

	@talk_name$				聊天玩家的名字 (若使用 fakename 假名, 則會尊重它)
	@talk_mes$				聊天玩家的內容

注意事項:
	此事件無法捕獲玩家輸入的 GM 指令或 / 開頭的客戶端指令

--------------------------------------------------------------
