//--------------------------------------------------------------
// Giraffe<模擬器> - 套接字配置文件
// 本配置文件由 davidsiaw 將其翻譯成英文
// 由Giraffe<模擬器>開發團隊翻譯成中文並加以潤色
//--------------------------------------------------------------
// 提示: 此配置文件中, 只要是以 // 作為開頭的行, 都是注釋信息. 
// 注釋信息您可以隨意修改, 不會幹擾服務器的任何行為. 
//--------------------------------------------------------------

// Display debug reports (When something goes wrong during the report, the report is saved.)
debug: no

// Linux/Epoll: Maximum Events per cycle
// Default Value:
//	(Maximum Supported Connections)/2
// NOTE: this controls the maximum collected socket-events per-cycle (call to epoll_wait())
//       for example settings this to 32 will allow up to 32 events (incoming data/new connections
//       per server-cycle.
// NOTE: Recommended Settings is at least half the maximum supported connections
//       Settings this to a lower value, may cause lags/delays
//       Depending on available CPU Time
// NOTE: This Setting is only available on Linux when build using EPoll as event dispatcher!
//
//epoll_maxevents: 1024

// How long can a socket stall before closing the connection (in seconds)
stall_time: 60

// 當有新的連接請求需要建立時, 是否先檢查對方的 IP 地址是否符合規則?
// 這個選項打開後會同時啟用 DDoS 攻擊防護機制.
enable_ip_rules: yes

// 設置檢查 IP 地址時的規則順序
//
//   deny,allow     : 先黑後白, 即: 先檢查黑名單規則, 再檢查白名單規則.
//                    如果 IP 地址沒有在任何名單中出現, 則通過. 
//   allow,deny     : 先白後黑, 即: 先檢查白名單規則, 再檢查黑名單規則.
//                    如果 IP 地址沒有在任何名單中出現, 則通過. 
//   mutual-failure : 要求 IP 地址必須白名單中並且與此同時不在黑名單中,
//                    才判定為通過. 
// 
// 默認值為: deny,allow (表示先黑後白)
order: deny,allow

//===================================
// 白名單規則
//===================================
// allow : 允許連接的 IP 範圍
// 若來訪的 IP 地址命中白名單, 那麽就允許與它的連接
// 若 IP 地址可以匹配上多個規則, 那麽優先使用匹配上的第一條規則
// 支持的 IP 地址範圍格式有以下幾種:
// allow: 127.0.0.1
// allow: 192.168.0.0/16
// allow: 10.0.0.0/255.0.0.0
// allow: all

//===================================
// 黑名單規則
//===================================
// deny  : 拒絕連接的 IP 範圍
// 若來訪的 IP 地址命中黑名單, 那麽就拒絕與它的連接
// 若 IP 地址可以匹配上多個規則, 那麽優先使用匹配上的第一條規則
// 支持的 IP 地址範圍格式有以下幾種:
// deny: 127.0.0.1
// deny: 192.168.0.0/16
// deny: 10.0.0.0/255.0.0.0

//===================================
// DDoS 攻擊防護設置
//===================================
// 在 ddos_interval 選項指定的時間間隔內
// 若某個 IP 地址建立連接超過了 ddos_count 指定的次數,
// 那麽將此 IP 視為發起了 DDoS 攻擊, 並且在 ddos_autoreset 毫秒內禁止它再次連接

// 連續嘗試建立連接的間隔時間 (單位: 毫秒)
// 默認值為: 3000 毫秒
ddos_interval: 3000

// 連續嘗試建立連接的次數
// 默認值為: 5 次
ddos_count: 5

// 當某個 IP 地址被判定為發起 DDoS 攻擊之後, 
// 需要過多長時間 (單位: 毫秒) 才允許這個 IP 重新與我們建立連接
// 默認值為: 600000 毫秒 (即 10 分鐘)
ddos_autoreset: 600000

//===================================
// 針對負載均衡健康監控的設置
//===================================
// 該組選項必須啟用 enable_ip_rules 才會發生作用.
// 
// 使負載均衡的健康監控 IP 建立/關閉的連接信息不再顯示到終端
// 啟用後被 health 規則命中的這些 IP 地址, 都將具備:
//   - 它們的連接將會被無條件接受
//   - 它們關閉連接的時候終端將不會顯示出提示信息
//   - 它們發起高頻的連接請求將不會被判定為 DDoS 攻擊
// 默認值為: 是
make_hm_silent: yes

// 阿里雲的負載均衡業務 (CLB/SLB) 會對端口進行健康監控
// 根據 https://help.aliyun.com/document_detail/55205.html 中的信息
// 以下是進行健康監控的探針服務器地址, Giraffe<模擬器>默認將其加入白名單
health: 100.64.0.0/10

// Google Cloud 的網絡負載平衡業務會對端口進行健康監控
// 根據 https://cloud.google.com/load-balancing/docs/health-check-concepts#ip-ranges 中的信息
// 以下是進行健康監控的探針服務器地址, Giraffe<模擬器>默認將其加入白名單
health: 35.191.0.0/16
health: 209.85.152.0/22
health: 209.85.204.0/22


import: conf/import/packet_conf.txt
