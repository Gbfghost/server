//--------------------------------------------------------------
// GRF 路徑配置文件
//--------------------------------------------------------------
// 這里可以隨意添加您想加載的 GRF 文件.
// 
// 這個配置文件用處已經不像幾年前那麽大了.
// 在最開始的 Athena 系列服務端中, 這個配置文件很重要.
// 因為地圖服務器會根據這里指定的 GRF 文件(或指定的 data 目錄)
// 去讀取它里面的 gat 文件和 rsw 文件,
// 以此來確定地圖中有哪些格子是玩家不能移動的, 或有水域覆蓋的.
// 
// 現代的 rAthena 服務端中引入了 mapcache 地圖緩存概念,
// 通過 mapcache.exe 可以快速的將 GRF 中的數據生成 map_cache.dat 文件,
// 這樣地圖服務器啟動時, 就無需再去讀取 GRF 文件, 從而提高了加載速度. 
// 
// 地圖服務器現在已經優先讀取 mapcache.dat 文件,
// 除非在 conf/map_athena.conf 配置文件中的 use_grf 中改成 yes,
// 否則地圖服務器不會再讀取此配置文件, 也不會根據此處的配置
// 去讀取 GRF 文件(或指定的 data 目錄)中的地圖數據.
// 
// 此文件現在主要變成了 mapcache.exe 的配置文件.
// 只需要將想讀取的 GRF 文件(或指定的 data 目錄)在這里設置好,
// 運行 mapcache.exe 就可以生成地圖緩存文件(map_cache.dat). 
//--------------------------------------------------------------


//--------------------------------------------------------------
// 注意事項
//--------------------------------------------------------------
// 使用地圖緩存文件可以有效提高加載速度,
// 也不需要在服務器上存放巨大的客戶端 GRF 文件(或解壓後的 data 目錄).
// 
// 但缺點其實也比較明顯, 只是不常遇到:
// 當你客戶端的地圖有變化時, 你需要通過 WeeMapCache.exe 手動維護,
// 或者使用 mapcache.exe 重新生成地圖緩存文件.
//
// 現在越來越多的人開服都會添加大量的自定義地圖,
// 韓服官方近幾年也對地圖進行了較高頻度的微調, 此時越需要注意
// 在每次添加/更新地圖文件時刷新地圖緩存文件, 否則會導致遊戲內表現異常.
//--------------------------------------------------------------

//--------------------------------------------------------------
// 下面這兩行配置信息是 rAthena 官方自帶的例子.
// 只需要將 grf: 左側的注釋符 // 去掉即可啟用, 否則程序將無視他們. 
//--------------------------------------------------------------
//grf: C:\Program Files\Gravity\RO\rdata.grf
//grf: C:\Program Files\Gravity\RO\data.grf

//--------------------------------------------------------------
// 除了通過直接指定 grf 文件外,
// 還可以直接配置到已經被解壓的 data 目錄.
// 
// 請填寫遊戲安裝目錄, 而不是具體到 data\ 目錄的路徑
// 
// 舉個例子:
// C:\Program Files\Gravity\RO\          RIGHT! 這是正確的
// C:\Program Files\Gravity\RO\data\     ERROR! 這是錯誤的
//--------------------------------------------------------------
//data_dir: C:\Program Files\Gravity\RO\
